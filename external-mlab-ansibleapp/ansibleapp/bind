#!/usr/bin/env python

import json
import os
import sys
import base64


raw_bind_params = os.environ['BIND_PARAMS']
raw_provision_params = os.environ['PROVISION_PARAMS']

if not raw_bind_params:
    output_error('BIND_PARAMETERS env variable missing')
if not raw_provision_params:
    output_error('PROVISION_PARAMETERS env variable missing')

bind_params = json.loads(raw_bind_params)
provision_params = json.loads(raw_provision_params)


def output_error(error):
    print '<BIND_ERROR>%s</BIND_ERROR>' % error


def output_payload(payload):
    print '<BIND_CREDENTIALS>%s</BIND_CREDENTIALS>' % payload


def malformed_param_input():
    output_error('Malformed parameter input')
    sys.exit(1)


def extract_creds():
    try:
        creds = {}
        bind_user = bind_params['user']
        acct = None

        for kvp in [('acct_one_user', 'one'), ('acct_two_user', 'two')]:
            if provision_params[kvp[0]] == bind_user:
                acct = kvp[1]
                break
        if not acct:
            return None

        user_k = 'acct_%s_user' % acct
        pass_k = 'acct_%s_pass' % acct

        creds['user'] = provision_params[user_k]
        creds['pass'] = provision_params[pass_k]
        creds['db'] = provision_params['db']

        return creds
    except:
        return None

creds = extract_creds()

if not creds:
    malformed_param_input()
else:
    output_payload(base64.b64encode(json.dumps(creds)))
    sys.exit(0)
