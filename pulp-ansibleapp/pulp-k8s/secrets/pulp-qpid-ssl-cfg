#!/bin/bash
# Copyright (c) 2012 Red Hat, Inc.
#
# This software is licensed to you under the GNU General Public License,
# version 2 (GPLv2). There is NO WARRANTY for this software, express or
# implied, including the implied warranties of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2
# along with this software; if not, see
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.
#
# Red Hat trademarks are not licensed under GPLv2. No permission is
# granted to use or replicate Red Hat trademarks that are incorporated
# in this software or its documentation.
#

####
# Shamelessly stolen and modifed from Pulp source. This script normally gets
# installed in /usr/bin/
####

set -e

umask 0077

DIR=$(mktemp -d) || exit 1
HOST=qpidd


PWDFILE="qpiddb-pw"
SEEDFILE="seed"
INST_DIR='qpiddb'
VALID="12"
CA_PATH=""
CA_KEY_PATH=""

echo ""
echo "Working in: $DIR"
echo ""

#
# ========== SETUP ============
#

DB_PASSWORD=$(dd if=/dev/urandom bs=8192 count=1 | sha256sum | cut -d " " -f 1)

CA_PATH=certs/ca.crt
CA_KEY_PATH=certs/ca.key

#
# ========== PASSWORD ===========
#

# create the password file
echo "$DB_PASSWORD" > $DIR/$PWDFILE

echo ""
echo "Password file created."

#
# ========== DATABASE ============
#

# create the nss db
certutil -N -d $DIR -f $DIR/$PWDFILE

echo ""
echo "Database created."

#
# =========== CA =================
#

# create/import the CA cert
echo ""
if [ "${#CA_PATH}" -eq 0 ]
then
  echo "Creating CA certificate:"
  SUBJECT="CN=redhat,O=pulp,ST=Alabama,C=US"
  dd if=/dev/urandom of=$DIR/$SEEDFILE bs=8192 count=1
  certutil -S -d $DIR -n "ca" -s $SUBJECT -t "TC,," -f $DIR/$PWDFILE -z $DIR/$SEEDFILE -x -v $VALID
  echo "CA created"
else
  openssl pkcs12 -export -in $CA_PATH -inkey $CA_KEY_PATH -out $DIR/ca.p12 -name "ca" \
      -passout file:$DIR/$PWDFILE
  pk12util -d $DIR -n "ca" -i $DIR/ca.p12 -w $DIR/$PWDFILE -k $DIR/$PWDFILE
  certutil -d $DIR -n "ca" -M -t "TCu,Cu,Tuw" -f $DIR/$PWDFILE
  echo "CA certificate: $CA_PATH, imported"
fi
certutil -L -d $DIR -n "ca" -a -o $DIR/ca.crt -f $DIR/$PWDFILE


#
# =========== BROKER =============
#

# create broker cert signing request
echo ""
echo "Creating BROKER certificate:"
SUBJECT="CN=$HOST,O=pulp,ST=Alabama,C=US"
dd if=/dev/urandom of=$DIR/$SEEDFILE bs=8192 count=1
certutil -R -d $DIR -s $SUBJECT -a -o $DIR/broker.req -f $DIR/$PWDFILE -z $DIR/$SEEDFILE

# sign the broker cert w/ CA
certutil -C -d $DIR -c "ca" -v $VALID -uV -m1 -a -i $DIR/broker.req -f $DIR/$PWDFILE \
    -o $DIR/broker.crt

# import the broker cert
certutil -A -d $DIR -n "broker" -t ",," -a -i $DIR/broker.crt

echo "Broker certificate created."


#
# =========== INSTALL =============
#

# clean unused artifacts
rm $DIR/broker.req

# create target directory and install files
mkdir -p $INST_DIR
mkdir -p $INST_DIR/nss
cp $DIR/*.crt $INST_DIR
cp $DIR/*.db $INST_DIR/nss
cp $DIR/$PWDFILE $INST_DIR/nss

# update perms
chmod 640 $INST_DIR/*.crt
chmod 640 $INST_DIR/nss/*

echo ""
echo "Artifacts copied to: $INST_DIR."
echo ""

#
# =========== CLEANUP =============
#

for f in broker.crt ca.crt cert8.db key3.db $PWDFILE secmod.db seed ca.p12; do
    rm $DIR/$f
done
rmdir $DIR
